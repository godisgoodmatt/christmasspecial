Name,Displayed As,Symbol,Description,Stacks?,Remove at End Turn?,Remove at Start Turn?,Invisible?,Blocked by Reduce?,Script: When inflicted,Script: On any status infliction,Script: Before Start Turn,Script: On Start Turn,Script: On any equipment use,Script: On any countdown reduce,Script: End Turn,Script: After Combat,Script: On damage inflicted,Script: On damage taken,Script: On status remove
Slush,Slush,shiver,All [ice] ice damage is cut in half,YES,NO,NO,NO,NO,,,,,,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Slush\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,if(dmgtype == ICE) { attack(-dmg / 2); },,
Damageup,Power Boost,sword,Do [sword]<value> extra damage with each attack this turn.,YES,YES,NO,NO,NO,,,,,,,,,target.hp -= getstatusself(~Damageup~); target.textparticle(~[red]+~+getstatusself(~Damageup~));,,
Permaboost,Perma Boost,sword,Do [sword]<value> extra damage with each attack this battle.,YES,NO,NO,NO,NO,,,,,,,,,target.hp -= getstatusself(~Permaboost~); target.textparticle(~[red]+~+getstatusself(~Permaboost~));,,
Regen,Regen,regen,Heal by [heal]<value> for every attack this turn,YES,YES,NO,NO,NO,,,,,attackself(-getstatusself(~Regen~)); sfx(~_heal~);,,,,,,
ShieldEater,ShieldEater,shieldeater,Constantly destroys half of current shield,YES,NO,NO,NO,NO,,,,,,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~ShieldEater\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move(); attackself(getstatusself(SHIELD) / 2); sfxdamage(target[;] d); sfx(~_shield~);,,,,
Bleed,Bleed,bleed,Take [red]<value> [white]damage when using any equipment.|Pierces shields,YES,YES,NO,NO,NO,,,,,pierceattackself(getstatusself(~Bleed~)); sfx(~_poison~); sfxdamage(target[;] d); self.textparticle(~[red]Bleeding out!~);,,,,,,
Dodgey,Dodgey,dodge,All attacks have a 50% chance to deal 50% less damage,YES,NO,NO,NO,NO,,,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Dodgey\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,if(chance(50)){ self.hp += (dmg/2); sfx(~_dodge~); self.textparticle(~[yellow]DODGED!~); },
Stun,Stun,stun,<value> equipment is disabled this turn,YES,YES,NO,NO,NO,var goodeq = []; for(eq in self.equipment){ if(eq.availablethisturn){ goodeq.push(eq); }; }; goodeq = shuffle(goodeq); var s = getstatusself(~Stun~); while(goodeq.length > 0 && s > 0){ s-=1; var r = goodeq.pop(); r.availablethisturn = false; r.unavailabledetails = [~Stunned~]; r.animate(~flashandshake~); }; sfx(~_shock~);,,,var goodeq = []; for(eq in self.equipment){ if(eq.availablethisturn){ goodeq.push(eq); }; }; goodeq = shuffle(goodeq); var s = getstatusself(~Stun~); while(goodeq.length > 0 && s > 0){ s-=1; var r = goodeq.pop(); r.availablethisturn = false; r.unavailabledetails = [~Stunned~]; r.animate(~flashandshake~); }; sfx(~_shock~);,,,,,,,
Drowning,Drowning,potion,Take 1 damage for every countdown reduce and equipment used,NO,NO,NO,NO,NO,,,,,pierceattackself(1); sfx(~_poison~); sfxdamage(target[;] d); self.textparticle(~[blue]DROWNING!~);,pierceattackself(1); sfx(~_poison~); sfxdamage(target[;] d); self.textparticle(~[blue]DROWNING!~);,,,,,
Perma Reduce,Prema_Reduce,reduce,Take less damage from every attack this battle.,YES,NO,NO,NO,NO,inflictself(REDUCE[;] status.value); sfx(~_shield~);,,,inflictself(REDUCE[;] status.value); sfx(~_shield~);,,,,,,,
Blighted,[purple]Blighted,vanish,[purple]Has 30% chance to give [dodge]1 [purple]to enemy on equipment use|[purple]Has 20% chance to deal 3 damage on equipment use,NO,YES,NO,NO,NO,,,,,if(chance(30)){ inflict(~DODGE~[;] 1); sfx(~_shock~); } if(chance(20)){ pierceattackself(3); sfxdamage(target[;] 3); },,,,,,
regeneration,Regeneration,grace,Heal [heal]<value> health at the start of turn.,YES,NO,NO,NO,NO,,,,attackself(-getstatusself(~regeneration~)); sfx(~_heal~); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Regeneration\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,
Powerdown,Power_Down,powerdown,Do [sword]<value> less damage with each attack this turn.|If attacks deal less damage than power down heal enemy with the difference,YES,YES,NO,NO,NO,,,,,,,,,target.hp += getstatusself(~Powerdown~); target.textparticle(~[red]-~-getstatusself(~Powerdown~));,,
Permadown,Perma_Down,powerdown,Do [sword]<value> less damage with each attack this turn.|If attacks deal less damage than power down heal enemy with the difference|Max of 4,YES,NO,NO,NO,NO,if(getstatusself(~Permadown~) >= 4) { removestatusself(~Permadown~[;] getstatusself(~Permadown~) - 4); },,if(getstatusself(~Permadown~) >= 4) { removestatusself(~Permadown~[;] getstatusself(~Permadown~) - 4); },,,,,,target.hp += getstatusself(~Permadown~); target.textparticle(~[red]-~-getstatusself(~Permadown~));,,
Lastingpower,Lasting_Power,sword,Do [sword]<value> extra damage with each attack this turn.|,YES,NO,NO,NO,NO,,,,,,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Lastingpower\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,target.hp -= getstatusself(~Lastingpower~); target.textparticle(~[red]-~+getstatusself(~Lastingpower~));,,
alternate_Blighted,Blighted?,vanish,[purple]Has 35% chance to deal 3 damage to you next turn on item use|[purple]Has 10% chance to stun you next turn on item use,NO,YES,NO,NO,NO,,,,,if(chance(10)){ jinx(~Blighted? Stun~[;]~Get stunned~[;]~Get stunned~[;]~inflict(\~Stun\~[;]%VAR%); sfx(\~_shock\~);~[;]self[;]self[;]1[;](7)); sfx(~_thinghappens~); } if(chance(35)){ jinx(~Blighted? Damage~[;]~Take [sword]%VAR%~[;]~Take [sword]%VAR%~[;]~pierceattack(%VAR%); sfxdamage(null[;]%VAR%);~[;]self[;]self[;]1[;](3)); sfx(~_thinghappens~); },,,,,,
alternate_Bleed,Bleed?,bleed,Take [red]1 [white]damage when reducing countdowns|Pierces shields,NO,YES,NO,NO,NO,,,,,,pierceattackself(1); sfx(~_poison~); sfxdamage(target[;] 1); self.textparticle(~[red]Bleeding out!~);,,,,,
alternate_regeneration,Regeneration?,grace,Next turn heal [grace]<value> health,YES,YES,NO,NO,NO,,,,,,,jinx(~Regeneration~[;]~Heal [grace]%VAR% health~[;]~Heal [grace]%VAR% health~[;]~attack(-%VAR%); sfx(\~_heal\~);~[;]self[;]self[;]1[;](getstatusself(~alternate_regeneration~))); sfx(~_thinghappens~);,,,,
Parry,Parry,nerfed,Next attack has status effects and damage reflected to the attacker|Removes 1 parry when attacked,YES,NO,NO,NO,NO,,if (self.getvar(~enemyturn~)) { jinx(~Parried Effect~[;]~Effect from [nerfed]Parry~[;]~Effect from [nerfed]Parry~[;]~inflict(\~~+inflicted_type+~\~[;]~+inflicted_value+~); sfx(\~_thinghappens\~);~[;]target[;]self[;]1[;]1); sfx(~_thinghappens~); },,self.resetvar(~enemyturn~);,,,self.setvar(~enemyturn~[;] true);,,,if (self.getvar(~enemyturn~)) { if(dmg > 0) { attack(dmg[;]dmgtype); } } var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Parry\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,
Fan,Fan,fan,Can't be burned when having this effect|Fire damage is also cut in half|Decreases by 1 each turn,YES,NO,NO,NO,NO,,,removestatusself(FIRE[;] ALL);,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Fan\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,if(dmgtype == FIRE) { attackself(-dmg / 2); },
Karen Rule,Karen_Rule,dynamo,Whoopsie something mustve not been plugged in right :D,NO,NO,NO,YES,NO,,,if(self.spaceleft() >= 2){ giveequipment(rand(getequipmentlist(null[;][][;][~alternateversion~[;]~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~]))[;] -1); },,,,,,,,
Tree,Tree,thorns,SHHHHHHHHHHHHHHHHHHHH|Your not seeing this,NO,NO,NO,YES,NO,,,,,,,,,,if(self.spaceleft() >= 1){ giveequipment([~Ornament~][;]true[;]false); },
Song,Song,song,Show 'em your power thru the form of|SOOOOOOONNNNNGGGGG,YES,NO,NO,NO,NO,,,,,,,var s = new elements.Skill(~Against all odds_old~); s.script=~removestatusself(\~Song\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,
Too Sweet,Too_Sweet,heart,All damage dealt this turn is cut by half|Share all status effects with enemy|When either happens removes 1 status,YES,YES,NO,NO,NO,,jinx(~Parried Effect~[;]~Effect from [nerfed]Parry~[;]~Effect from [nerfed]Parry~[;]~inflict(\~~+inflicted_type+~\~[;]~+inflicted_value+~); sfx(\~_thinghappens\~);~[;]target[;]self[;]1[;]1); sfx(~_thinghappens~); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Too Sweet\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,attack(-dmg / 2); var s = new elements.Skill(~Against all odds_old~); s.script=~removestatusself(\~Too Sweet\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,
Sting,Sting,sting,Damage to target is increased by 50%|Every time attacked loses 1 of this effect,YES,NO,NO,NO,NO,,,,,,,,,,attackself(dmg / 2); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~Sting\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,
Whelm,shouldntsee,blind,,NO,YES,NO,YES,NO,,,,Gadget.changegadget(self[;] ~Whelm (0 Uses)~[;] ~Whelm (2 Uses)~);,,,,,,,
moderatewhelm,Moderatewhelmed,sword,Moderatewhelm deals <value> more damage.,YES,NO,NO,NO,NO,,,,,,,,,,,
ncr_lightswitch1,Light_Switch_1,dice,Roll an extra 1 next turn.,NO,NO,YES,NO,NO,,,,,,,,,,,
ncr_lightswitch2,Light_Switch_2,dice,Roll an extra 2 next turn.,NO,NO,YES,NO,NO,,,,,,,,,,,
ncr_lightswitch3,Light_Switch_3,dice,Roll an extra 3 next turn.,NO,NO,YES,NO,NO,,,,,,,,,,,
ncr_lightswitch4,Light_Switch_4,dice,Roll an extra 4 next turn.,NO,NO,YES,NO,NO,,,,,,,,,,,
ncr_lightswitch5,Light_Switch_5,dice,Roll an extra 5 next turn.,NO,NO,YES,NO,NO,,,,,,,,,,,
ncr_lightswitch6,Light_Switch_6,dice,Roll an extra 6 next turn.,NO,NO,YES,NO,NO,,,,,,,,,,,
Demise,Timely_Demise,skipturn,While you have this status[;] lose [heart]1 health when using any equipment.|Status amount decreases by 1 per turn.,YES,NO,NO,NO,NO,,,,,pierceattackself(1); sfxdamage(self[;]1);,,var s = new elements.Skill(~Against all odds_old~); s.script=~removestatusself(\~Demise\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.01[;]null); tw.onComplete(s.execute[;][self[;]target]); tw.move();,,,,
winterwitch,Invisible,,Take 1 damage every 2 seconds,NO,NO,NO,YES,NO,,,,self.resetvar(~winterwitchact~); var s = new elements.Skill(~Against all odds_old~); s.script = ~if(self.dicepool.length == 0 # self.doendturnnow # self.hp == 0) { self.getvar(\~winterwitchact\~).stop(); } else { pierceattackself(1); sfxdamage(self[;] 1); }~; var act = new motion.actuators.SimpleActuator(null[;] 2[;] null); act._repeat = -1; self.setvar(~winterwitchact~[;] act); act.onRepeat(s.execute[;] [self[;]target]); act.move();,,,if(self.varexists(~winterwitchact~)) { self.getvar(~winterwitchact~).stop(); self.resetvar(~winterwitchact~); },if(self.varexists(~winterwitchact~)) { self.getvar(~winterwitchact~).stop(); self.resetvar(~winterwitchact~); },,,
threshold,Threshold,threshold,You can't do more than <value> moves this turn.,YES,YES,NO,NO,NO,Rules.movelimit = status.value;,,,,,,Rules.movelimit = 0;,Rules.movelimit = 0;,,,
cursesuppressor,Curse Suppressor,curse,Odds of [curse]Curse triggering equal to 25%|this turn,NO,YES,YES,NO,NO,Rules.curseodds = 25;,,,,,,Rules.curseodds = 50;,,,,
cursebooster,Curse Booster,curse,Odds of [curse]Curse triggering equal to 100%|this turn,NO,YES,NO,NO,NO,,,Rules.curseodds = 100;,,,,Rules.curseodds = 50;,,,,
heater,Heater,weaken,Weaken all equipment with [ice] symbol.,NO,YES,NO,NO,NO,,,,var eqtoweaken = []; for (eq in self.equipment){ if(eq.availablethisturn && eq.fulldescription.indexOf(~[ice]~) != -1 && !eq.hastag(~weakenavoid~) && !eq.hastag(~weakenimmune~)){ eqtoweaken.push(eq); } } for(eq in eqtoweaken) eq.animate(WEAKEN);,,,,,,,
heater+,Heater+,weaken,Weaken all [blue]cyan[] equipment.,NO,YES,NO,NO,NO,,,,var eqtoweaken = []; for (eq in self.equipment){ if(eq.availablethisturn && eq.equipmentcol == 8 && !eq.hastag(~weakenavoid~) && !eq.hastag(~weakenimmune~)){ eqtoweaken.push(eq); } } for(eq in eqtoweaken) eq.animate(WEAKEN);,,,,,,,
never6,Never_roll_6,dice,You can't roll 6 this fight.,NO,NO,NO,NO,NO,var dicerange = []; if(self.isplayer)  dicerange = Rules.actualplayerdicerange.copy(); else  dicerange = Rules.actualenemydicerange.copy(); if(dicerange.length == 0) { dicerange = [1[;]2[;]3[;]4[;]5[;]6]; } dicerange.remove(6); if(dicerange.length == 0) { dicerange = [1]; } if(self.isplayer)  Rules.playerdicerange(dicerange); else  Rules.enemydicerange(dicerange);,,,,,,,if(self.isplayer) { Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); } else { Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); },,,
never5,Never_roll_5,dice,You can't roll 5 this fight.,NO,NO,NO,NO,NO,var dicerange = []; if(self.isplayer)  dicerange = Rules.actualplayerdicerange.copy(); else  dicerange = Rules.actualenemydicerange.copy(); if(dicerange.length == 0) { dicerange = [1[;]2[;]3[;]4[;]5[;]6]; } dicerange.remove(5); if(dicerange.length == 0) { dicerange = [1]; } if(self.isplayer)  Rules.playerdicerange(dicerange); else  Rules.enemydicerange(dicerange);,,,,,,,if(self.isplayer) { Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); } else { Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); },,,
never4,Never_roll_4,dice,You can't roll 4 this fight.,NO,NO,NO,NO,NO,var dicerange = []; if(self.isplayer)  dicerange = Rules.actualplayerdicerange.copy(); else  dicerange = Rules.actualenemydicerange.copy(); if(dicerange.length == 0) { dicerange = [1[;]2[;]3[;]4[;]5[;]6]; } dicerange.remove(4); if(dicerange.length == 0) { dicerange = [1]; } if(self.isplayer)  Rules.playerdicerange(dicerange); else  Rules.enemydicerange(dicerange);,,,,,,,if(self.isplayer) { Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); } else { Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); },,,
never3,Never_roll_3,dice,You can't roll 3 this fight.,NO,NO,NO,NO,NO,var dicerange = []; if(self.isplayer)  dicerange = Rules.actualplayerdicerange.copy(); else  dicerange = Rules.actualenemydicerange.copy(); if(dicerange.length == 0) { dicerange = [1[;]2[;]3[;]4[;]5[;]6]; } dicerange.remove(3); if(dicerange.length == 0) { dicerange = [1]; } if(self.isplayer)  Rules.playerdicerange(dicerange); else  Rules.enemydicerange(dicerange);,,,,,,,if(self.isplayer) { Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); } else { Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); },,,
never2,Never_roll_2,dice,You can't roll 2 this fight.,NO,NO,NO,NO,NO,var dicerange = []; if(self.isplayer)  dicerange = Rules.actualplayerdicerange.copy(); else  dicerange = Rules.actualenemydicerange.copy(); if(dicerange.length == 0) { dicerange = [1[;]2[;]3[;]4[;]5[;]6]; } dicerange.remove(2); if(dicerange.length == 0) { dicerange = [1]; } if(self.isplayer)  Rules.playerdicerange(dicerange); else  Rules.enemydicerange(dicerange);,,,,,,,if(self.isplayer) { Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); } else { Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); },,,
never1,Never_roll_1,dice,You can't roll 1 this fight.,NO,NO,NO,NO,NO,var dicerange = []; if(self.isplayer)  dicerange = Rules.actualplayerdicerange.copy(); else  dicerange = Rules.actualenemydicerange.copy(); if(dicerange.length == 0) { dicerange = [1[;]2[;]3[;]4[;]5[;]6]; } dicerange.remove(1); if(dicerange.length == 0) { dicerange = [1]; } if(self.isplayer)  Rules.playerdicerange(dicerange); else  Rules.enemydicerange(dicerange);,,,,,,,if(self.isplayer) { Rules.playerdicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); } else { Rules.enemydicerange([1[;] 2[;] 3[;] 4[;] 5[;] 6]); },,,
fireplace,Fireplace,heal,When you are hit by fire[;] it will heal you instead of damage this turn.,NO,YES,NO,NO,NO,self.innate.remove(~absorbfire~); self.innate.push(~absorbfire~);,,,,,,self.innate.remove(~absorbfire~);,self.innate.remove(~absorbfire~);,,,
instanttransform,instanttransform,potion,(text should not appear),NO,YES,NO,YES,NO,beartransform();,,,,,,,,,,
bearcurse,Bear's_Curse,curse,Curse yourself each turn,NO,NO,NO,NO,NO,beartransform();,,,inflictself(CURSE); sfx(~_curse~[;]~~[;]0.2);,,,,,,,
creativecrisis,Creative_Crisis,cog,You make no new gadgets after this fight.|Your current gadgets will become Broken Gadgets.,NO,NO,NO,NO,NO,,,,,,,,Rules.inventor_inspiration = false; var skillList = []; for(skill in self.getskillcard().skills) { skillList.push(skill.name); } for(skill in skillList) { Gadget.changegadget(self[;] skill[;]~Broken Gadget~); },,,
consumerism,Consumerism,cog,You make <value> additional gadget(s) after this fight.,YES,NO,NO,NO,NO,,,,,,,,,,,
creativecrisis+,creativecrisis+,cog,(text should not appear),NO,NO,NO,NO,NO,,,,,,,,Rules.inventor_inspiration = false;,,,
reversecpu,Garbage Collector,cog,Next roll reduces CPU instead of increasing it.,YES,YES,NO,NO,NO,,,,,,,,,,,
robotfreeze,Frozen,ice,Turns the highest dice rolled into a 1.,YES,YES,NO,NO,NO,,,,,,,,,,,
oddcpureduce,Odd CPU Reduce,cog,You shouldn't be seeing this.,NO,YES,NO,YES,NO,,,,,,,,,,,
commandment,Commandment,heal,(should not appear),NO,YES,NO,YES,NO,var forbiddendice = self.getvar(~forbiddendice~); status.scriptonshockrelease = ~for (d in self.dicepool) if (d.consumed && self.getvar(\~forbiddendice\~)[1].indexOf(d.basevalue) != -1) {removestatusself(\~Commandment\~); break;}~,,,,var dice = e.assigneddice; if (e.tempreuseableequipment.length != 0) for (f in e.tempreuseableequipment) { dice = dice.concat(f.assigneddice); } for (d in dice) if (d != null && self.getvar(~forbiddendice~)[1].indexOf(d.basevalue) != -1) { removestatusself(~Commandment~); break; },if (self.getvar(~forbiddendice~)[1].indexOf(e.dicehistory[e.dicehistory.length-1].basevalue) != -1) removestatusself(~Commandment~);,if(target != null && target.hp > 0) { var s = new elements.Skill(~Against all odds_old~); s.script = self.getvar(~commandbonus~)[1]; s.execute(self[;]target); },,,,
grabbag,Grab_Bag,star,The items you currently have are from Grab Bag,NO,YES,NO,NO,NO,var s = new elements.Skill(~grabbag_internal~); s.execute(self[;]target);,,,,,,,,,,
morefluff,More_Fluff,dynamo,The items you currently have are from Jackeaa's More Fluff mod,NO,YES,NO,NO,NO,var s = new elements.Skill(~morefluff_internal~); s.execute(self[;]target);,,,,,,,,,,
rs,Reference_Stuff,grace,The items you have are from the Reference Stuff mod,NO,YES,NO,NO,NO,var s = new elements.Skill(~rs_internal~); s.execute(self[;]target);,,,,,,,,,,
fade,Fade,vanish,Duplicate dice are immediately destroyed. Disappears when triggered.,YES,YES,NO,NO,YES,,,,,,,,,,,
nothing,Nothing,nothing,Does absolutely nothing.,NO,YES,NO,NO,NO,,,,,,,,,,,
alternate_nothing,Nothing?,nothing,Doesn't do something.,NO,YES,NO,NO,NO,,,,,,,,,,,
Storm,Storm,graystorm,Do [sword]-<value> less damage with each attack this turn.|[purple]Has 35% chance to deal 3 damage to you next turn on item use|[purple]Has 10% chance to stun you next turn on item use,YES,YES,NO,NO,NO,,,,,if(chance(10)){ jinx(~Storm Stun~[;]~Get stunned~[;]~Get stunned~[;]~inflict(\~Stun\~[;]%VAR%); sfx(\~_shock\~);~[;]self[;]self[;]1[;](7)); sfx(~_thinghappens~); } if(chance(35)){ jinx(~Storm Damage~[;]~Take [sword]%VAR%~[;]~Take [sword]%VAR%~[;]~pierceattack(%VAR%); sfxdamage(null[;]%VAR%);~[;]self[;]self[;]1[;](3)); sfx(~_thinghappens~); },,,,target.hp += getstatusself(~Storm~); target.textparticle(~[red]-~-getstatusself(~Storm~));,,
redshift,Redshift,redshift,Shock all of your [red]red[] equipment.,NO,YES,NO,NO,YES,,,,runscript(~christmasspecial/redshift~[;][self]);,,,,,,,
endlesswinterfreeze,Endless Winter,endlesswinter,Gain [ice]<value> freeze each turn.,YES,NO,NO,NO,NO,inflictself(ICE); sfx(~_ice~);,,inflictself(ICE[;]status.value); sfx(~_ice~);,,,,,,,,
falseswipe,False_Swipe,recycle,(invisible - prevents enemy from dying to false swipe),YES,YES,YES,YES,NO,,,,,,,,,if(target.hp < status.value){ target.hp = status.value; } removestatusself(~falseswipe~[;]ALL);,,
losedice,-1_dice,dice6,Enemy has <value> less dice this turn,YES,YES,NO,NO,NO,,,self.extradice-=getstatusself(~losedice~);,,,,self.extradice+=getstatusself(~losedice~);,,,,
ncr_snap,Snap!,glove,Use a random equipment for free!|Applies immediately when inflicted[;] if possible[;]|or at the start of your turn.,YES,NO,NO,NO,NO,var snappableequipment = [for(eq in self.equipment) if(eq.onscreen() && eq.isready() && eq.skillcard == ~~ && eq.getslots().length > 0) eq]; var val = inflicted_value; var snapoccurred = false; if(snappableequipment.length > 0) shuffle(snappableequipment); while(val > 0) { if(snappableequipment.length == 0) break; runscript(~ncrmod/snap~[;][snappableequipment.pop()[;]true[;]self[;]target]); val--; var tw = new motion.actuators.SimpleActuator(null[;]0.01[;]null); var s = new elements.Skill(~Against all odds_old~); s.script = ~  removestatusself(\~~ + status.type + ~\~);~; tw.onComplete(s.execute[;][self[;]target]); tw.move(); snapoccurred = true; },,,var snappableequipment = [for(eq in self.equipment) if(eq.onscreen() && eq.isready() && eq.skillcard == ~~ && eq.getslots().length > 0) eq]; var val = status.value; var snapoccurred = false; if(snappableequipment.length > 0) shuffle(snappableequipment); while(val > 0) { if(snappableequipment.length == 0) break; runscript(~ncrmod/snap~[;][snappableequipment.pop()[;]true[;]self[;]target]); val--; removestatusself(status.type); snapoccurred = true; } if(snapoccurred) sfx(~jester_snap~);,,,,,,,
ncr_error,Error,ncr_error,At the start of your turn[;] a random item errors out[;]|rendering it unusable for that turn.,YES,YES,NO,NO,YES,if(self.dicepool.length > 0) { var erroramt = inflicted_value; var erroreq = []; var optimalerroreq = []; if(self.equipment.length > 0) { for(eq in self.equipment) { if(eq.hastag(~errorimmune~) == false && eq.skillcard == ~~ && eq.isready()) { erroreq.push(eq); optimalerroreq.push(eq); /*don't avoid erroring shocked equipment if error inflicted midturn*/ } } while(erroramt > 0) { var pickedeq = null; if(optimalerroreq.length > 0) pickedeq = rand(optimalerroreq); else pickedeq = rand(erroreq); pickedeq.removedice(); roboterror(self[;][pickedeq]); optimalerroreq.remove(pickedeq); erroreq.remove(pickedeq); if(erroreq.length < 1) break; erroramt--; } if (self.layout == ~DECK~) { Deck.advance(0.8); } } },,,var erroramt = status.value; var erroreq = []; var optimalerroreq = []; if(self.equipment.length > 0) { for(eq in self.equipment) { if(eq.hastag(~errorimmune~) == false && eq.skillcard == ~~ && eq.isready()) { erroreq.push(eq); if(!eq.weakened && eq.shockedsetting == 0) optimalerroreq.push(eq); } } while(erroramt > 0) { var pickedeq = null; if(optimalerroreq.length > 0) pickedeq = rand(optimalerroreq); else pickedeq = rand(erroreq); pickedeq.removedice(); roboterror(self[;][pickedeq]); optimalerroreq.remove(pickedeq); erroreq.remove(pickedeq); if(erroreq.length < 1) break; erroramt--; } if (self.layout == ~DECK~) { Deck.advance(0.8); } },,,,,,,
ncr_error_all,Error_all,ncr_error,All of your items error out[;] rendering them unusable for this turn.,NO,YES,NO,NO,YES,if(self.dicepool.length > 0) { roboterror(self); self.roll_error = true; if (self.layout == ~DECK~) { Deck.advance(0.8); } },,,roboterror(self); if (self.layout == ~DECK~) { self.roll_error = true; Deck.advance(0.8); },,,,,,,
reversenexttarget,Swap_Next_Target,recycle,The next equipment you use will swap target.,YES,YES,NO,NO,NO,,,,,,,,,,,
mf_stun,Stun,stun,Random equipment is disabled for the turn.,YES,YES,NO,NO,YES,,,,var goodeq = []; for(eq in self.equipment){ if(eq.availablethisturn){ goodeq.push(eq); }; }; goodeq = shuffle(goodeq); var s = getstatusself(~mf_stun~); while(goodeq.length > 0 && s > 0){ s-=1; var r = goodeq.pop(); r.availablethisturn = false; r.unavailabledetails = [~Stunned~]; r.animate(~flashandshake~); }; sfx(~_shock~);,,,,,,,
batted,Battered,dice,Enemy caught the dice you batted!|They get <value> more dice next turn.,YES,YES,NO,NO,NO,,,,,,,,,,,
healaftercombat,Regeneration,heal,After combat[;] recover [heal]<value> health.|Doesn't trigger if you flee.,YES,NO,NO,NO,NO,,,,,,,,if(!flee){ attackself(-getstatusself(~healaftercombat~)); };,,,
watchburstbeam,WatchBurstBeam,dice,(should not appear),NO,YES,NO,YES,NO,self.setvar(~burstbeamdamage~[;]self.limitvalue);,,,,self.setvar(~burstbeamdamage~[;]self.limitvalue);,,,,,self.setvar(~burstbeamdamage~[;]self.limitvalue);,
all6,nunya,dice6,shhhh secwet,NO,NO,NO,YES,NO,,,,var c = 0; for (mydice in self.dicepool){ if (mydice.available()){ mydice.animatereroll(6[;] self.screenposition()[;] c * 0.05); c++; } } sfx(~entercombat_ladyluck_phase2~); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~all6\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,
mf_healnextturn,Heal_Next_Turn,heart,At the start of next turn[;] recover [heart]<value> health.,YES,NO,YES,NO,NO,,,,,,,,,,,
snowball,Snowball_Effect,ice,Everytime you deal ice damage deal +1 more ice damage,NO,NO,NO,NO,NO,,,,,,,,,,,
snowballenemy,Snowball_Effect,ice,Everytime you deal ice damage deal +1 more ice damage,NO,NO,NO,YES,NO,status.scriptmodifydamage=~if(dmgtype == \~ice\~){return (dmg + 1);} else return (dmg);~,,,,,,,,,,
itemusetracker,itemusetracker,,text should not appear,NO,NO,NO,YES,NO,self.setvar(~recurringlists~[;][]);,,,,var itemuselist = self.getvar(~recurringlists~); for(eq in self.equipment){ if(eq.name == ~Recurring Winds~){ if(!e.hastag(~cannotreuse~) && e.name != ~Recurring Winds~){ itemuselist.push(e); break; } } } self.setvar(~recurringlists~[;]itemuselist);,,,self.setvar(~recurringlists~[;][]);,,,
manakeep,Keep_Next_Mana,potion,The next time you spend [mana] mana[comma] you will do it for free.,YES,NO,NO,NO,NO,self.setvar(~manakeepcounter~[;]getstatusself(MANA));,if(getstatusself(MANA) > self.getvar(~manakeepcounter~)){ self.setvar(~manakeepcounter~[;]getstatusself(MANA)); },,,if(e.script.indexOf('removestatusself(MANA') > 0){ if(getstatusself(MANA) < self.getvar(~manakeepcounter~)){ inflictself(MANA[;]self.getvar(~manakeepcounter~) - getstatusself(MANA)); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~manakeep\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.1[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move(); } },,,,,,
manaboost,Mana_Boost,potion,Gain [mana]<value> more mana when gain mana this turn.,YES,YES,NO,NO,NO,self.setvar(~manaboostcounter~[;]getstatusself(MANA));,if(getstatusself(MANA) > self.getvar(~manakeepcounter~)){ inflictself(MANA[;]getstatusself(~manaboost~)); self.setvar(~manakeepcounter~[;]getstatusself(MANA)); },,,,,,,,,
manakeep+,Keep_Next_Mana+,potion,The next time you spend [mana] mana[comma] it will increase your mana.,YES,NO,NO,NO,NO,self.setvar(~manakeeppluscounter~[;]getstatusself(MANA)); self.setvar(~whoachill~[;]1),if(getstatusself(MANA) > self.getvar(~manakeeppluscounter~)){ self.setvar(~manakeeppluscounter~[;]getstatusself(MANA)); },,,if(self.getvar(~whoachill~) == 1){ self.setvar(~whoachill~[;]0); [;] } else if(e.script.indexOf('removestatusself(MANA') > 0){ if(getstatusself(MANA) < self.getvar(~manakeeppluscounter~)){ inflictself(MANA[;](self.getvar(~manakeeppluscounter~) - getstatusself(MANA))*2); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~manakeep+\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.1[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move(); self.setvar(~statuschill~[;]0); } } },,,,,,
freetrades,Free_Trades,potion,All mana-using bonuses are free for this turn.,YES,YES,NO,NO,NO,self.setvar(~manakeepcounter~[;]getstatusself(MANA));,if(getstatusself(MANA) > self.getvar(~manakeepcounter~)){ self.setvar(~manakeepcounter~[;]getstatusself(MANA)); },,,if(e.script.indexOf('removestatusself(MANA') > 0){ if(getstatusself(MANA) < self.getvar(~manakeepcounter~)){ inflictself(MANA[;]self.getvar(~manakeepcounter~) - getstatusself(MANA)); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~manakeep\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.1[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move(); } },,,,,,
upgradecast,Upgrade_Cast,confuse,Upgrade the next spell you cast (does not triggers when you cast in upgraded slot.),YES,NO,NO,NO,NO,if(self.varexists(~upgradecastactuator~)) { self.getvar(~upgradecastactuator~).stop(); } for(eq in self.equipment){ eq.setvar(~upgradecast~[;]1); } var s = new elements.Skill(~Against All Odds_old~); s.script=~for(eq in self.equipment){if(!eq.upgraded && self.hasstatus(\~upgradecast\~) && !eq.weakened && eq.getvar(\~upgradecast\~) != 1 && eq.name != \~Next Tome\~){ var eqx = eq.x;var eqy = eq.y; eq.create(eq.name +\~+\~);eq.y = eqy;eq.x = eqx;eq.animate(\~flashandshake\~); sfx(\~upgradeequipment\~); removestatusself(\~upgradecast\~[;] 1);}};~; self.setvar(~upgradecastactuator~[;]new motion.actuators.SimpleActuator(null[;]0.1[;]null)); self.getvar(~upgradecastactuator~)._repeat = -1; self.getvar(~upgradecastactuator~).onRepeat(s.execute[;][self[;]target]); self.getvar(~upgradecastactuator~).move();,,,,,,,self.getvar(~upgradecastactuator~)._repeat = 0; self.resetvar(~upgradecastactuator~); self.resetvar(~upgradecastx~); self.resetvar(~upgradecasty~);,,,
weakencast,Weaken_Cast,weaken,Weaken the next spell you cast this turn,YES,YES,NO,NO,NO,if(self.varexists(~weakencastactuator~)) { self.getvar(~weakencastactuator~).stop(); } for(eq in self.equipment){ eq.setvar(~weakencast~[;]1); } var s = new elements.Skill(~Against All Odds_old~); s.script=~for(eq in self.equipment){if(self.hasstatus(\~weakencast\~) && !eq.weakened && eq.getvar(\~weakencast\~) != 1 && eq.name != \~Next Tome\~){ var eqx = eq.x;var eqy = eq.y;eq.animate(WEAKEN);eq.x = eqx;eq.y = eqy;self.resetvar(\~weakencastx\~);self.resetvar(\~weakencasty\~);removestatusself(\~weakencast\~[;] 1);eq.setvar(\~weakencast\~[;]1);}};~; self.setvar(~weakencastactuator~[;]new motion.actuators.SimpleActuator(null[;]0.1[;]null)); self.getvar(~weakencastactuator~)._repeat = -1; self.getvar(~weakencastactuator~).onRepeat(s.execute[;][self[;]target]); self.getvar(~weakencastactuator~).move();,,,,,,,self.getvar(~weakencastactuator~)._repeat = 0; self.resetvar(~weakencastactuator~); self.resetvar(~weakencastx~); self.resetvar(~weakencasty~);,,,
shockcast,Shock_Cast,shock,Shock the next spell you cast this turn,YES,YES,NO,NO,NO,if(self.varexists(~shockcastactuator~)) { self.getvar(~shockcastactuator~).stop(); } for(eq in self.equipment){ eq.setvar(~shockcast~[;]1); } var s = new elements.Skill(~Against All Odds_old~); s.script=~for(eq in self.equipment){if(self.hasstatus(\~shockcast\~) && !eq.shocked && eq.getvar(\~shockcast\~) != 1 && eq.name != \~Next Tome\~){var eqx = eq.x;var eqy = eq.y;eq.animate(SHOCK);eq.x = eqx;eq.y = eqy;removestatusself(\~shockcast\~[;] 1);eq.setvar(\~shockcast\~[;]1);}};~; self.setvar(~shockcastactuator~[;]new motion.actuators.SimpleActuator(null[;]0.1[;]null)); self.getvar(~shockcastactuator~)._repeat = -1; self.getvar(~shockcastactuator~).onRepeat(s.execute[;][self[;]target]); self.getvar(~shockcastactuator~).move();,,,,,,,self.getvar(~shockcastactuator~)._repeat = 0; self.resetvar(~shockcastactuator~); self.resetvar(~shockcastx~); self.resetvar(~shockcasty~);,,,
bookban1,Can't_Use_First_Spellbook,nospellbook,Reduces by 1 every turn. Unless it's zero[comma]|you can't use the first spellbook.,YES,NO,NO,NO,NO,self.setvar(~spellbook1unavailable~[;]status.value); self.getskillcard().unavailabledetails = [~Disabled (~+self.getvar(~spellbook1unavailable~)+~ turns left)~];,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~bookban1\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.1[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,,
bookban2,Can't_Use_Second_Spellbook,nospellbook,Reduces by 1 every turn. Unless it's zero[comma]|you can't use the second spellbook.,YES,NO,NO,NO,NO,self.setvar(~spellbook2unavailable~[;]status.value); self.getskillcard().unavailabledetails = [~Disabled (~+self.getvar(~spellbook2unavailable~)+~ turns left)~];,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~bookban2\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.1[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,,
bookban3,Can't_Use_Third_Spellbook,nospellbook,Reduces by 1 every turn. Unless it's zero[comma]|you can't use the third spellbook.,YES,NO,NO,NO,NO,self.setvar(~spellbook3unavailable~[;]status.value); self.getskillcard().unavailabledetails = [~Disabled (~+self.getvar(~spellbook3unavailable~)+~ turns left)~];,,var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~bookban3\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0.1[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,,
nimblehandsstatus,nimblehandsstatus,,text should not appear,NO,NO,NO,YES,NO,if(self.gamevar.exists(~nimblehandsstolencard~)){ self.getvar(~nimblehandsstolencard~).availablethisturn = false; self.getvar(~nimblehandsstolencard~).unavailabletext = ~Borrowed~; self.getvar(~nimblehandsstolencard~).unavailabledetails = [~Say goodbye to Christmas!~[;]~Signed[;] {enemyname}~]; },,if(self.gamevar.exists(~nimblehandsstolencard~)){ self.getvar(~nimblehandsstolencard~).availablethisturn = false; self.getvar(~nimblehandsstolencard~).unavailabletext = ~Borrowed~; self.getvar(~nimblehandsstolencard~).unavailabledetails = [~Say goodbye to Christmas!~[;]~Signed[;] {enemyname}~]; },,,,if(self.gamevar.exists(~nimblehandsstolencard~)){ self.getvar(~nimblehandsstolencard~).availablenextturn = false; self.getvar(~nimblehandsstolencard~).unavailabletext = ~Borrowed~; self.getvar(~nimblehandsstolencard~).unavailabledetails = [~Say goodbye to Christmas!~[;]~Signed[;] {enemyname}~]; },if(self.hp > 0){ target.equipment.remove(self.getvar(~nimblehandsstolencard~)); },,,
fireweakness,Fire_Weakness,fireweakness,You are weak to [fire] fire.,NO,NO,NO,NO,NO,self.addinnate(~weakfire~);,,,,,,,self.innate.remove(~weakfire~);,,,
restore,Restore,heal,Heal [heal]<value> health at the end of your turn.,YES,YES,NO,NO,NO,,,,,,,if(target.hp > 0){ attackself(-status.value); sfx(~_heal~); },,,,
ncr_lingeringshield,Lingering_shield,shield,Receive [shield]<value> shield every turn.,YES,NO,NO,NO,NO,,,inflictself(SHIELD[;]stat.value);,,,,,,,,
ncr_restraint_all,Restrain_all,weaken,Temporarily weaken a random equipment whenever you use a card|directed at the enemy. Equipment becomes less powerful.,NO,YES,NO,NO,YES,,,,,if(e.castdirection == 1) { inflictself(WEAKEN); self.applyequipmentcurses(); },,,,,,
eternitycannon,Eternity_Cannon,eternitycannon,Do [sword]5 damage at the start of each turn <value> time(s).,YES,NO,NO,NO,NO,,,,for(i in 0...status.value){ attack(5); }; sfxdamage(target[;]5*status.value);,,,,,,,
eternitycannondowngraded,Eternity_Cannon-,eternitycannon,Do [sword]3 damage at the start of each turn <value> time(s).,YES,NO,NO,NO,NO,,,,for(i in 0...status.value){ attack(3); }; sfxdamage(target[;]3*status.value);,,,,,,,
chain,chain,cog,text should not appear,NO,NO,NO,YES,NO,status.scriptoncursetrigger = ~runscript(\~christmasspecial/jester_dochaining\~[;][self])~; status.scriptonenemydodge = status.scriptoncursetrigger;,,,,,,,,,,
mkapowcharge,Magic_Kapow_Charge,fury,Magic Kapow will deal double damage this turn.,NO,YES,NO,NO,NO,,,,,,,,,,,
shielddown,Shield_Down,potion,At the start of your turn[;] lose [shield]<value> shield.,YES,NO,NO,NO,YES,,,,removestatusself(SHIELD[;]status.value);,,,,,,,
rednote,Red_Note,rednote,Do [fire]<value> damage each turn|On even turns burn a dice|When removed deals [fire]5 damage burn all dice,YES,NO,NO,NO,NO,,,,,,,if(turn % 2 == 0){ inflict(FIRE); sfx(~_fire~); } attack(getstatusself(~rednote~)[;] FIRE); sfxdamage(target[;] getstatusself(~rednote~));,,,,attack(5[;] FIRE); sfxdamage(target[;] 5); inflict(FIRE[;] ALL); sfx(~_fire~);
greennote,Green_Note,greennote,Heal [heal]<value> health each turn|When removed cure half poison|and heal [heal]4 health,YES,NO,NO,NO,NO,,,,,,,attackself(-getstatusself(~greennote~)); sfx(~_heal~);,,,,sfx(~_cure~); attackself(-4); removestatusself(POISON[;] getstatusself(POISON) / 2);
reennote,[red]Reen_[green]Note,reennote,[red]On_odd_turns[;]_[red]Do_[fire]<value>_dmg[green]|On_even_turns[;] [green]Heal_[heal]<value>_health[red]|When_removed[;][green]Heal_[heal]4_health [red]Do_[fire]4_dmg,YES,NO,NO,NO,NO,,,,,,,if(turn % 2 == 0){ attackself(-getstatusself(~reennote~)); sfx(~_heal~); } else { attack(getstatusself(~reennote~)[;] FIRE); sfxdamage(target[;] getstatusself(~reennote~)); },,,,sfx(~_cure~); attackself(-4); attack(4[;] FIRE); sfxdamage(target[;] 4);
yellownote,Yellow_Note,yellownote,Shock [shock]<value> items on odd turns|When removed do [shock]3 damage shock all items,YES,NO,NO,NO,NO,,,,,,,if(turn % 2 == 0){ self.setvar(~donothing~[;] 0); } else { inflict(SHOCK[;] getstatusself(~yellownote~)); sfx(~_shock~); },,,,inflict(SHOCK[;] ALL); sfx(~_shock~); attack(3[;] SHOCK); sfxdamage(target[;] 3);
orangenote,Orange_Note,orangenote,Weaken [weaken]<value> items on even turns|When removed Do [weaken]3 damage weaken 4 items,YES,NO,NO,NO,NO,,,,,,,if(turn % 2 == 0){ inflict(WEAKEN[;] getstatusself(~orangenote~)); sfx(~_weaken~); },,,,attack(3[;] WEAKEN); sfxdamage(target[;] 3); inflict(WEAKEN[;] 4); sfx(~_weaken~);
bownote,[yellow]Ra[green]in[blue]bo[purple]w_N[orange]ot[red]e,bownote,[yellow]Mimics [green]a [blue]random [purple]other [orange]notes [red]properties[black]|When [yellow]removed [green]gain [blue]a [purple]random [orange]note's [red]removal [black]effect,YES,NO,NO,NO,NO,,,,,,,var note = rand([~red~[;]~green~[;]~yellow~[;]~orange~[;]~blue~[;]~black~[;]~purple~]); if(note == ~red~){ attack(getstatusself(~bownote~)[;] FIRE); sfxdamage(target[;] getstatusself(~bownote~)); self.textparticle(~[red]Red Note~); } else if(note == ~green~){ attackself(-getstatusself(~bownote~)); sfx(~_heal~); self.textparticle(~[green]Green Note~); } else if(note == ~yellow~){ inflict(SHOCK[;] getstatusself(~bownote~)); sfx(~_shock~); self.textparticle(~[yellow]Yellow Note~); } else if(note == ~orange~){ inflict(WEAKEN[;] getstatusself(~bownote~)); sfx(~_weaken~); self.textparticle(~[orange]Orange Note~); } else if(note == ~black~){ attack(getstatusself(~bownote~)); sfxdamage(target[;] getstatusself(~bownote~)); self.textparticle(~[black]Black Note~); } else if(note == ~blue~){ inflict(ICE); sfx(~_ice~); self.textparticle(~[blue]Blue Note~); } else if(note == ~purple~){ inflict(POISON[;] getstatusself(~bownote~)); sfx(~_poison~); self.textparticle(~[purple]Purple Note~); },,,,var note = rand([~red~[;]~green~[;]~yellow~[;]~orange~[;]~blue~[;]~black~[;]~purple~]); if(note == ~red~){ attack(5[;] FIRE); sfxdamage(target[;] 5); inflict(FIRE[;] ALL); sfx(~_fire~); self.textparticle(~[red]Red Note~); } else if(note == ~green~){ sfx(~_cure~); attackself(-4); self.textparticle(~[green]Green Note~); } else if(note == ~yellow~){ inflict(SHOCK[;] ALL); sfx(~_shock~); attack(3[;] SHOCK); sfxdamage(target[;] 3); self.textparticle(~[yellow]Yellow Note~); } else if(note == ~orange~){ attack(3[;] WEAKEN); sfxdamage(target[;] 3); inflict(WEAKEN[;] 4); sfx(~_weaken~); self.textparticle(~[orange]Orange Note~); } else if(note == ~black~){ attack(6); sfxdamage(target[;] 6); self.textparticle(~[black]Black Note~); } else if(note == ~blue~){ inflict(ICE[;] ALL); sfx(~_ice~); self.textparticle(~[blue]Blue Note~); } else if(note == ~purple~){ inflict(POISON[;] 4); sfx(~_poison~); self.textparticle(~[pruple]Purple Note~); }
bluenote,Blue_Note,bluenote,Freeze a dice each turn|When removed freeze all dice,NO,NO,NO,NO,NO,,,,,,,inflict(ICE); sfx(~_ice~);,,,,inflict(ICE[;] ALL); sfx(~_ice~);
blacknote,Black_Note,blacknote,Do [sword]<value> damage each turn|When removed Do [sword]6 damage,YES,NO,NO,NO,NO,,,,,,,attack(getstatusself(~blacknote~)); sfxdamage(target[;] getstatusself(~blacknote~));,,,,attack(6); sfxdamage(target[;] 6);
purpnote,Purple_Note,purplenote,Inflict [poison]<value> poison on odd turns|When removed inflict [poison]4 poison,YES,NO,NO,NO,NO,,,,,,,inflict(POISON[;] getstatusself(~purpnote~)); sfx(~_poison~);,,,,inflict(POISON[;] 4); sfx(~_poison~);
stash7,Stash_7,dice,Roll an extra 7 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(7); } givedice(dice); status.value = 0;,,,,,,,
stash8,Stash_8,dice,Roll an extra 8 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(8); } givedice(dice); status.value = 0;,,,,,,,
stash9,Stash_9,dice,Roll an extra 9 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(9); } givedice(dice); status.value = 0;,,,,,,,
stash10,Stash_10,dice,Roll an extra 10 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(10); } givedice(dice); status.value = 0;,,,,,,,
stash11,Stash_11,dice,Roll an extra 11 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(11); } givedice(dice); status.value = 0;,,,,,,,
stash12,Stash_12,dice,Roll an extra 12 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(12); } givedice(dice); status.value = 0;,,,,,,,
stash13,Stash_13,dice,Roll an extra 13 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(13); } givedice(dice);  status.value = 0;,,,,,,,
stash14,Stash_14,dice,Roll an extra 14 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(14); } givedice(dice);  status.value = 0;,,,,,,,
stash15,Stash_15,dice,Roll an extra 15 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(15); } givedice(dice);  status.value = 0;,,,,,,,
stash16,Stash_16,dice,Roll an extra 16 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(16); } givedice(dice);  status.value = 0;,,,,,,,
stash17,Stash_17,dice,Roll an extra 17 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(17); } givedice(dice);  status.value = 0;,,,,,,,
stash18,Stash_18,dice,Roll an extra 18 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(18); } givedice(dice);  status.value = 0;,,,,,,,
stash19,Stash_19,dice,Roll an extra 19 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(19); } givedice(dice);  status.value = 0;,,,,,,,
stash20,Stash_20,dice,Roll an extra 20 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(20); } givedice(dice);  status.value = 0;,,,,,,,
stash21,Stash_21,dice,Roll an extra 21 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(21); } givedice(dice);  status.value = 0;,,,,,,,
stash22,Stash_22,dice,Roll an extra 22 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(22); } givedice(dice);  status.value = 0;,,,,,,,
stash23,Stash_23,dice,Roll an extra 23 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(23); } givedice(dice);  status.value = 0;,,,,,,,
stash24,Stash_24,dice,Roll an extra 24 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(24); } givedice(dice);  status.value = 0;,,,,,,,
stash25,Stash_25,dice,Roll an extra 25 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(25); } givedice(dice);  status.value = 0;,,,,,,,
stash26,Stash_26,dice,Roll an extra 26 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(26); } givedice(dice);  status.value = 0;,,,,,,,
stash27,Stash_27,dice,Roll an extra 27 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(27); } givedice(dice);  status.value = 0;,,,,,,,
stash28,Stash_28,dice,Roll an extra 28 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(28); } givedice(dice);  status.value = 0;,,,,,,,
stash29,Stash_29,dice,Roll an extra 29 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(29); } givedice(dice);  status.value = 0;,,,,,,,
stash30,Stash_30,dice,Roll an extra 30 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(30); } givedice(dice);  status.value = 0;,,,,,,,
stash31,Stash_31,dice,Roll an extra 31 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(31); } givedice(dice);  status.value = 0;,,,,,,,
stash32,Stash_32,dice,Roll an extra 32 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(32); } givedice(dice);  status.value = 0;,,,,,,,
stash33,Stash_33,dice,Roll an extra 33 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(33); } givedice(dice);  status.value = 0;,,,,,,,
stash34,Stash_34,dice,Roll an extra 34 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(34); } givedice(dice);  status.value = 0;,,,,,,,
stash35,Stash_35,dice,Roll an extra 35 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(35); } givedice(dice);  status.value = 0;,,,,,,,
stash36,Stash_36,dice,Roll an extra 36 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(36); } givedice(dice);  status.value = 0;,,,,,,,
stash37,Stash_37,dice,Roll an extra 37 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(37); } givedice(dice);  status.value = 0;,,,,,,,
stash38,Stash_38,dice,Roll an extra 38 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(38); } givedice(dice);  status.value = 0;,,,,,,,
stash39,Stash_39,dice,Roll an extra 39 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(39); } givedice(dice);  status.value = 0;,,,,,,,
stash40,Stash_40,dice,Roll an extra 40 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(40); } givedice(dice);  status.value = 0;,,,,,,,
stash41,Stash_41,dice,Roll an extra 41 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(41); } givedice(dice);  status.value = 0;,,,,,,,
stash42,Stash_42,dice,Roll an extra 42 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(42); } givedice(dice);  status.value = 0;,,,,,,,
stash43,Stash_43,dice,Roll an extra 43 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(43); } givedice(dice);  status.value = 0;,,,,,,,
stash44,Stash_44,dice,Roll an extra 44 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(44); } givedice(dice);  status.value = 0;,,,,,,,
stash45,Stash_45,dice,Roll an extra 45 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(45); } givedice(dice);  status.value = 0;,,,,,,,
stash46,Stash_46,dice,Roll an extra 46 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(46); } givedice(dice);  status.value = 0;,,,,,,,
stash47,Stash_47,dice,Roll an extra 47 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(47); } givedice(dice);  status.value = 0;,,,,,,,
stash48,Stash_48,dice,Roll an extra 48 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(48); } givedice(dice);  status.value = 0;,,,,,,,
stash49,Stash_49,dice,Roll an extra 49 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(49); } givedice(dice);  status.value = 0;,,,,,,,
stash50,Stash_50,dice,Roll an extra 50 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(50); } givedice(dice);  status.value = 0;,,,,,,,
stash0,Stash_0,dice,Roll an extra 0 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(0); } givedice(dice);  status.value = 0;,,,,,,,
stash-1,Stash_m1,dice,Roll an extra -1 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-1); } givedice(dice); status.value = 0;,,,,,,,
stash-2,Stash_m2,dice,Roll an extra -2 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-2); } givedice(dice); status.value = 0;,,,,,,,
stash-3,Stash_m3,dice,Roll an extra -3 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-3); } givedice(dice); status.value = 0;,,,,,,,
stash-4,Stash_m4,dice,Roll an extra -4 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-4); } givedice(dice); status.value = 0;,,,,,,,
stash-5,Stash_m5,dice,Roll an extra -5 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-5); } givedice(dice); status.value = 0;,,,,,,,
stash-6,Stash_m6,dice,Roll an extra -6 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-6); } givedice(dice); status.value = 0;,,,,,,,
stash-7,Stash_m7,dice,Roll an extra -7 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-7); } givedice(dice);  status.value = 0;,,,,,,,
stash-8,Stash_m8,dice,Roll an extra -8 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-8); } givedice(dice);  status.value = 0;,,,,,,,
stash-9,Stash_m9,dice,Roll an extra -9 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-9); } givedice(dice);  status.value = 0;,,,,,,,
stash-10,Stash_m10,dice,Roll an extra -10 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-10); } givedice(dice);  status.value = 0;,,,,,,,
stash-11,Stash_m11,dice,Roll an extra -11 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-11); } givedice(dice);  status.value = 0;,,,,,,,
stash-12,Stash_m12,dice,Roll an extra -12 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-12); } givedice(dice);  status.value = 0;,,,,,,,
stash-13,Stash_m13,dice,Roll an extra -13 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-13); } givedice(dice);  status.value = 0;,,,,,,,
stash-14,Stash_m14,dice,Roll an extra -14 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-14); } givedice(dice);  status.value = 0;,,,,,,,
stash-15,Stash_m15,dice,Roll an extra -15 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-15); } givedice(dice);  status.value = 0;,,,,,,,
stash-16,Stash_m16,dice,Roll an extra -16 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-16); } givedice(dice);  status.value = 0;,,,,,,,
stash-17,Stash_m17,dice,Roll an extra -17 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-17); } givedice(dice);  status.value = 0;,,,,,,,
stash-18,Stash_m18,dice,Roll an extra -18 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-18); } givedice(dice);  status.value = 0;,,,,,,,
stash-19,Stash_m19,dice,Roll an extra -19 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-19); } givedice(dice);  status.value = 0;,,,,,,,
stash-20,Stash_m20,dice,Roll an extra -20 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-20); } givedice(dice);  status.value = 0;,,,,,,,
stash-21,Stash_m21,dice,Roll an extra -21 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-21); } givedice(dice);  status.value = 0;,,,,,,,
stash-22,Stash_m22,dice,Roll an extra -22 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-22); } givedice(dice);  status.value = 0;,,,,,,,
stash-23,Stash_m23,dice,Roll an extra -23 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-23); } givedice(dice);  status.value = 0;,,,,,,,
stash-24,Stash_m24,dice,Roll an extra -24 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-24); } givedice(dice);  status.value = 0;,,,,,,,
stash-25,Stash_m25,dice,Roll an extra -25 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-25); } givedice(dice);  status.value = 0;,,,,,,,
stash-26,Stash_m26,dice,Roll an extra -26 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-26); } givedice(dice);  status.value = 0;,,,,,,,
stash-27,Stash_m27,dice,Roll an extra -27 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-27); } givedice(dice);  status.value = 0;,,,,,,,
stash-28,Stash_m28,dice,Roll an extra -28 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-28); } givedice(dice);  status.value = 0;,,,,,,,
stash-29,Stash_m29,dice,Roll an extra -29 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-29); } givedice(dice);  status.value = 0;,,,,,,,
stash-30,Stash_m30,dice,Roll an extra -30 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-30); } givedice(dice);  status.value = 0;,,,,,,,
stash-31,Stash_m31,dice,Roll an extra -31 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-31); } givedice(dice);  status.value = 0;,,,,,,,
stash-32,Stash_m32,dice,Roll an extra -32 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-32); } givedice(dice);  status.value = 0;,,,,,,,
stash-33,Stash_m33,dice,Roll an extra -33 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-33); } givedice(dice);  status.value = 0;,,,,,,,
stash-34,Stash_m34,dice,Roll an extra -34 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-34); } givedice(dice);  status.value = 0;,,,,,,,
stash-35,Stash_m35,dice,Roll an extra -35 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-35); } givedice(dice);  status.value = 0;,,,,,,,
stash-36,Stash_m36,dice,Roll an extra -36 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-36); } givedice(dice);  status.value = 0;,,,,,,,
stash-37,Stash_m37,dice,Roll an extra -37 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-37); } givedice(dice);  status.value = 0;,,,,,,,
stash-38,Stash_m38,dice,Roll an extra -38 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-38); } givedice(dice);  status.value = 0;,,,,,,,
stash-39,Stash_m39,dice,Roll an extra -39 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-39); } givedice(dice);  status.value = 0;,,,,,,,
stash-40,Stash_m40,dice,Roll an extra -40 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-40); } givedice(dice);  status.value = 0;,,,,,,,
stash-41,Stash_m41,dice,Roll an extra -41 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-41); } givedice(dice);  status.value = 0;,,,,,,,
stash-42,Stash_m42,dice,Roll an extra -42 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-42); } givedice(dice);  status.value = 0;,,,,,,,
stash-43,Stash_m43,dice,Roll an extra -43 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-43); } givedice(dice);  status.value = 0;,,,,,,,
stash-44,Stash_m44,dice,Roll an extra -44 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-44); } givedice(dice);  status.value = 0;,,,,,,,
stash-45,Stash_m45,dice,Roll an extra -45 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-45); } givedice(dice);  status.value = 0;,,,,,,,
stash-46,Stash_m46,dice,Roll an extra -46 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-46); } givedice(dice);  status.value = 0;,,,,,,,
stash-47,Stash_m47,dice,Roll an extra -47 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-47); } givedice(dice);  status.value = 0;,,,,,,,
stash-48,Stash_m48,dice,Roll an extra -48 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-48); } givedice(dice);  status.value = 0;,,,,,,,
stash-49,Stash_m49,dice,Roll an extra -49 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-49); } givedice(dice);  status.value = 0;,,,,,,,
stash-50,Stash_m50,dice,Roll an extra -50 next turn.,YES,NO,NO,YES,NO,,,,var dice = []; for (i in 0...status.value) { dice.push(-50); } givedice(dice);  status.value = 0;,,,,,,,
fixfakeskillcardafterbattleends,Fix_Fake_Skillcard_After_Battle_Ends,cog,Fixes the fake skillcard to make it so that it goes back into the backpack. Yes[;] it has to be a status[;] because status's onCombatEnd is ran just before equipment is put in your backpack.,NO,NO,NO,YES,NO,,,,,,,,self.equipment[0].skillcard = ~~;,,,
handlecompletelyprepared,Handle_Completely_Prepared,cog,Handles adding Completely Prepared to your hand. Yes[;] it has to be a status[;] otherwise[;] it gets added to your backpack as well.,NO,NO,NO,YES,NO,,,runscript(~christmasspecial/warriorpreperations/beforeturnstart~[;][self]);,,,,,,,,
endurance,Endurance,confuse,You take 25% less damage from all [sword] attacks,NO,NO,NO,NO,NO,status.scriptmodifydamage=~if(dmgtype == \~none\~){return (dmg*0.75);} else return (dmg);~,,,,,,,,,,
anticheat,Anti-Cheat,ncr_error,For every six left at the end of your turn[;]|take [sword]5 piercing damage.,NO,YES,NO,NO,NO,runscript(~christmasspecial/anticheat~[;][0]);,,self.setvar(~badsixes~[;]0); ,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue == 6){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null && d.basevalue == 6) {sixes += 1;} } }} self.setvar(~badsixes~[;]sixes);,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue == 6){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null && d.basevalue == 6) {sixes += 1;} } }} self.setvar(~badsixes~[;]sixes);,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue == 6){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null && d.basevalue == 6) {sixes += 1;} } }} self.setvar(~badsixes~[;]sixes);,if (self.getvar(~badsixes~) > 0 && target.hp > 0 && !flee) {pierceattackself(5*self.getvar(~badsixes~)); sfxdamage(self[;]5*self.getvar(~badsixes~)); },,,,
combo,Combo,combo,Used for Combo items|At end of turn do +[sword]<value> damage next turn,YES,NO,YES,NO,NO,,,inflictself(~Damageup~[;] getstatusself(~combo~)); sfx(~_fury~);,,,,,,,,
addiction,Addiction,addiction,At the end of your turn[;] take [sword]<value> damage for|every equipment you did not use at least once.,YES,YES,NO,NO,YES,,,,,var unused = 0;  for (eq in self.equipment) {if(eq.timesused == 0 && eq.ready && eq != e && eq.skillcard == ~~) {unused += 1;}} self.setvar(~unusedeq~[;]unused);,,var unusedeq = 0; for (eq in self.equipment) {if(self.equipmenthistory.indexOf(eq) == -1 && eq.skillcard == ~~ && (eq.usedthisbattle && eq.onceperbattle) == false ){unusedeq += 1;}} if (unusedeq > 0 && target.hp > 0 && !flee) {attackself(status.value*unusedeq); sfxdamage(self[;]status.value*unusedeq); } trace(unusedeq);,,,,
phase1,[green]Phase_1,shield,Gains 2 Shield each turn|Minor Damaging items,NO,NO,NO,NO,NO,,,,inflictself(SHIELD[;] 2); sfx(~_shield~);,,,,,,,
phase2,[yellow]Phase_2,dice1,Roll an extra dice on odd turns|Average damage dealing items,NO,NO,NO,NO,NO,,,,if(turn % 2 == 0){ donothing(); } else { givedice(); },,,,,,,
pottedplant,Potted_Plant,mana,Gain [mana]<value> mana each turn.,YES,NO,NO,NO,NO,//this status is currently unused[;] but in case we want to use it it's here,,,inflictself(~mana~|status.value);,,,,,,,
peppershaker,Pepper_Shaker,peppershaker,At the start of your turn[;] reduce|all countdowns in your hand to 1.,NO,NO,NO,NO,NO,//this status only works in jester's second episode for now,,,for(eq in self.equipment) { if (eq.ready && eq.countdown > 0 && eq.shockedsetting == 0) { runscript(~christmasspecial/boostcountdown~[;][self[;]eq[;]Math.round(eq.countdown - (eq.countdown / 2) - 1)]);} },,,,,,,
peppershaker+,Pepper_Shaker+,peppershaker,At the start of your turn[;] activate|all countdowns in your hand.,NO,NO,NO,NO,NO,,,,for(eq in self.equipment) { if (eq.ready && eq.countdown > 0 && eq.shockedsetting == 0) { runscript(~christmasspecial/boostcountdown~[;][self[;]eq[;]-1]); } },,,,,,,
phase3,[red]Phase_3,fury,On odd turns deal [sword]3 damage|On even turns heal [heal]10 health,NO,NO,NO,NO,NO,,,,if(turn % 2 == 0){ attackself(-10); sfx(~_heal~); } else { attack(3); sfxdamage(target[;] 3); },,,,,,,
drunk,Drunk,drunk,All items have a 40% chance to reverse target,NO,YES,NO,NO,NO,runscript(~christmasspecial/drunk~);,,,,,,,,,,
surprisegift,Surprise_Gift,gift,All equipment has a 33% chance to roll you a new dice.|Disappears once triggered.,YES,YES,NO,NO,NO,,,,,if(chance(33)) {givedice(); removestatusself(~surprisegift~[;]1); self.textparticle(~Surprise!~);},,,,,,
wealthyrelatives,Wealthy_Relatives,wealthyrelatives,Gain [gift]5 surprise gifts every turn.,NO,NO,NO,NO,NO,,,,inflictself(~surprisegift~[;] 5); sfx(~_cure~);,,,,,,,
wealthyrelatives+,Wealthy_Relatives+,wealthyrelatives,Gain [gift]5 upgraded surprise gifts every turn.,NO,NO,NO,NO,NO,,,,inflictself(~surprisegift+~[;] 5); sfx(~_cure~);,,,,,,,
surprisegift+,Surprise_Gift+,gift,All equipment has a 50% chance to roll you a new dice.|Disappears once triggered.,YES,YES,NO,NO,NO,,,,,if(chance(50)) {givedice(); removestatusself(~surprisegift+~[;]1); self.textparticle(~Surprise!~);},,,,,,
enemysilence,Silence,silence,Changes random items slots|to a 1-6 dice requirement,YES,YES,NO,NO,NO,,,,var goodeq = []; for(eq in self.equipment){ if(eq.availablethisturn){ goodeq.push(eq); }; }; goodeq = shuffle(goodeq); var s = getstatusself(~enemysilence~); while(goodeq.length > 0 && s > 0){ s-=1; var r = goodeq.pop(); var blah = rand([~REQUIRE1~[;]~REQUIRE2~[;]~REQUIRE3~[;]~REQUIRE4~[;]~REQUIRE5~[;]~REQUIRE6~]); r.changeslots([blah]); r.animate(~silence~); r.addtag(~resetthis~); }; sfx(~_silence~);,,,for(eq in self.equipment){     if(eq.hastag(~resetthis~)) {         eq.resetslots();         eq.removetag(~resetthis~);     } };,,,,
furyring,Fury_Ring,furyring,After doing [sword]6 damage or more[;]|gain [fury]fury if you had no [fury]fury[].,NO,NO,NO,NO,NO,self.setvar(~furyringact~[;] new motion.actuators.SimpleActuator(null[;]1/60[;]null)); self.setvar(~furyringskill~[;]new elements.Skill(~Against all odds_old~)); self.getvar(~furyringskill~).script = ~runscript(\~christmasspecial/furyring\~);~; self.getvar(~furyringact~).onRepeat(self.getvar(~furyringskill~).execute[;][self[;]target]); self.getvar(~furyringact~)._repeat = -1; self.getvar(~furyringact~).move(); ,,,,,,,self.getvar(~furyringact~).stop(); self.resetvar(~furyringact~); self.resetvar(~furyringskill~);,if (dmg >= 6 && self.getvar(~furyringfuried~) == 0){inflictself(~fury~[;]1); sfx(~_fury~);},,self.getvar(~furyringact~).stop(); self.resetvar(~furyringact~); self.resetvar(~furyringskill~);
furyring+,Fury_Ring+,furyring,After doing [sword]5 damage or more[;]|gain [fury]fury if you had no [fury]fury[].,NO,NO,NO,NO,NO,self.setvar(~furyringact~[;] new motion.actuators.SimpleActuator(null[;]1/60[;]null)); self.setvar(~furyringskill~[;]new elements.Skill(~Against all odds_old~)); self.getvar(~furyringskill~).script = ~runscript(\~christmasspecial/furyring\~);~; self.getvar(~furyringact~).onRepeat(self.getvar(~furyringskill~).execute[;][self[;]target]); self.getvar(~furyringact~)._repeat = -1; self.getvar(~furyringact~).move(); ,,,,,,,self.getvar(~furyringact~).stop(); self.resetvar(~furyringact~); self.resetvar(~furyringskill~);,if (dmg >= 5 && self.getvar(~furyringfuried~) == 0){inflictself(~fury~[;]1); sfx(~_fury~);},,self.getvar(~furyringact~).stop(); self.resetvar(~furyringact~); self.resetvar(~furyringskill~);
trustyblade,Trusty_Blade,trusty,Add a normal-slot weapon|to your hand each turn.,NO,NO,NO,NO,NO,,,runscript(~christmasspecial/jester/addequipmenttodeck~|[self|runscript(~christmasspecial/warriorthemes/a blade~[;][null[;]getequipmentlist(null[;][~large~][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~jesteronly~[;]~inventoronly~[;]~onceperbattle~[;]~alternateversion~[;]~vanilla~[;]~immunetotide~])[;]null[;]false[;]false])]);,,,,,,,,
trustyblade+,Trusty_Blade+,trusty,Add an upgraded normal-slot weapon|to your hand each turn.,NO,NO,NO,NO,NO,,,runscript(~christmasspecial/jester/addequipmenttodeck~|[self|runscript(~christmasspecial/warriorthemes/a blade~[;][null[;]getequipmentlist(null[;][~large~][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~jesteronly~[;]~inventoronly~[;]~onceperbattle~[;]~alternateversion~[;]~vanilla~[;]~immunetotide~])[;]null[;]false[;]false])+~+~]);,,,,,,,,
trustypole,Trusty_Pole,trusty,Add a normal-slot weapon|to your hand each turn.,NO,NO,NO,NO,NO,,,runscript(~christmasspecial/jester/addequipmenttodeck~|[self|runscript(~christmasspecial/warriorthemes/a pole~[;][null[;]getequipmentlist(null[;][~large~][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~jesteronly~[;]~inventoronly~[;]~onceperbattle~[;]~alternateversion~[;]~vanilla~[;]~immunetotide~])[;]null[;]false[;]false])]);,,,,,,,,
trustypole+,Trusty_Pole+,trusty,Add an upgraded countdown weapon|to your hand each turn.,NO,NO,NO,NO,NO,,,runscript(~christmasspecial/jester/addequipmenttodeck~|[self|runscript(~christmasspecial/warriorthemes/a pole~[;][null[;]getequipmentlist(null[;][~large~][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~jesteronly~[;]~inventoronly~[;]~onceperbattle~[;]~alternateversion~[;]~vanilla~[;]~immunetotide~])[;]null[;]false[;]false])+~+~]);,,,,,,,,
trustymaneuver,Trusty_Maneuver,trusty,Add a dice manipulator|to your hand each turn.,NO,NO,NO,NO,NO,,,runscript(~christmasspecial/jester/addequipmenttodeck~|[self|runscript(~christmasspecial/warriorthemes/a maneuver~[;][getequipmentlist(null[;][~small~][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~jesteronly~[;]~inventoronly~[;]~vanilla~[;]~onceperbattle~[;]~alternateversion~[;]~immunetotide~])[;]null[;]null[;]false[;]false])]);,,,,,,,,
trustymaneuver+,Trusty_Maneuver+,trusty,Add an upgraded dice manipulator|to your hand each turn.,NO,NO,NO,NO,NO,,,runscript(~christmasspecial/jester/addequipmenttodeck~|[self|runscript(~christmasspecial/warriorthemes/a maneuver~[;][getequipmentlist(null[;][~small~][;][~skillcard~[;]~excludefromrandomlists~[;]~robotonly~[;]~witchonly~[;]~jesteronly~[;]~inventoronly~[;]~vanilla~[;]~onceperbattle~[;]~alternateversion~[;]~immunetotide~])[;]null[;]null[;]false[;]false])+~+~]);,,,,,,,,
bugfix,Bug_Fix,cog,Reverts to the prev error chance,NO,NO,NO,YES,NO,self.setvar(~bug~[;] self.getvar(~errorchance~));,,self.setvar(~errorchance~[;] self.getvar(~bug~)); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~bugfix\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,,,,,,
bolts,bolts,dice,able to roll dice again :D,NO,NO,NO,YES,NO,,,,,,,self.setvar(~stop~[;] 0); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~bolts\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,self.setvar(~stop~[;] 0); var s = new elements.Skill(~Against All Odds_old~); s.script=~removestatusself(\~bolts\~[;] 1);~; var tw = new motion.actuators.SimpleActuator(null[;]0[;]null); tw._repeat = 1; tw.onRepeat(s.execute[;][self[;]target]); tw.move();,,,
alternate_anticheat,Anti-Cheat?,ncr_error,For every dice lower than six left at the end of|your turn[;] take [sword]5 piercing damage.,NO,YES,NO,NO,NO,runscript(~christmasspecial/anticheat~[;][1]);,,self.setvar(~baddice~[;]0); ,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue < 6){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null && d.basevalue < 6) {sixes += 1;} } }} self.setvar(~baddice~[;]sixes); ,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue < 6){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null && d.basevalue < 6) {sixes += 1;} } }} self.setvar(~baddice~[;]sixes);,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available() && mydice.basevalue < 6){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null && d.basevalue < 6) {sixes += 1;} } }} self.setvar(~baddice~[;]sixes);,if (self.getvar(~baddice~) > 0 && target.hp > 0 && !flee) {pierceattackself(5*self.getvar(~baddice~)); sfxdamage(self[;]5*self.getvar(~baddice~)); },,,,
patchnotes,Patch Notes,dice,(invisible),NO,NO,NO,YES,NO,,,,,,,,self.maxhp +=2; attackself(-2); sfx(~_heal~);,,,
super_anticheat,Anti-Cheat!,ncr_error,For every dice left at the end of|your turn[;] take [sword]5 piercing damage.,NO,YES,NO,NO,NO,runscript(~christmasspecial/anticheat~[;][2]);,,self.setvar(~ultrabaddice~[;]0); ,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available()){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null ) {sixes += 1;} } }} self.setvar(~ultrabaddice~[;]sixes); ,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available()){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null ) {sixes += 1;} } }} self.setvar(~ultrabaddice~[;]sixes); ,var sixes = 0; for (mydice in self.dicepool){ if (mydice.available()){ sixes += 1; } } for (e in self.equipment) {if(e.ready) {for (d in e.assigneddice) {if (d != null ) {sixes += 1;} } }} self.setvar(~ultrabaddice~[;]sixes); ,if (self.getvar(~ultrabaddice~) > 0 && target.hp > 0 && !flee) {pierceattackself(5*self.getvar(~ultrabaddice~)); sfxdamage(self[;]5*self.getvar(~ultrabaddice~)); },,,,
extradamage_singleturn,Extra,sword,Do [sword]<value> extra damage with each attack this turn.,YES,YES,NO,NO,NO,Rules.bonusdamage = status.value;,,,,,,Rules.bonusdamage = 0;,,,,
berserk,Berserk,berserk,All damage you inflict is doubled until the end of the turn.,YES,NO,NO,NO,NO,inflict(~realberserk~); ,,,inflict(~realberserk~); ,,,var berserk = self.getstatus(~berserk~); berserk.value--; berserk._displayvalue = berserk.value; if(berserk.value <=0) berserk.cleanup = true;,,,,
realberserk,Berserk,berserk,Should not appear.,NO,YES,YES,YES,NO,status.scriptmodifydamage = ~return (dmg * 2);~;,,status.scriptmodifydamage = ~~;,,,,status.scriptmodifydamage = ~~;,status.scriptmodifydamage = ~~;,,,
mariah2logic,Mariah_2_Logic,cog,Does the logic for Mariah Carey Episode 2,NO,NO,NO,YES,NO,,,,,runscript(~christmasspecial/mariahflipping/flipcard~[;][e]);,,,,,,
